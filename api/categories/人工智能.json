{"name":"人工智能","slug":"人工智能","count":2,"postlist":[{"title":"多模态行人 ReID 全量微调的过拟合问题与解决方案","uid":"32fbe71fdaa98cf4cb13d70c56ad0143","slug":"multimodal_reid","date":"2025-08-19T16:00:00.000Z","updated":"2025-08-19T13:21:36.221Z","comments":true,"path":"api/articles/multimodal_reid.json","keywords":"blog, technology, programming","cover":"images/multimodal_reid.png","text":"多模态行人重识别（ReID）旨在利用多种数据模态（如可见光图像、红外图像、素描、彩色手绘图、文本描述等）来匹配行人身份。在最新的 ORBench 数据集中，每个...","permalink":"/post/multimodal_reid","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"人工智能","slug":"人工智能","count":2,"path":"api/categories/人工智能.json"}],"tags":[{"name":"多模态","slug":"多模态","count":1,"path":"api/tags/多模态.json"},{"name":"CV","slug":"CV","count":1,"path":"api/tags/CV.json"}],"author":{"name":"Rockway","slug":"blog-author","avatar":"https://lingmafuture.github.io/images/3.jpg","link":"https://lingmafuture.github.io","description":"Think like an artist, code like an artisan! 像艺术家一样思考，像工匠一样编程！","socials":{"github":"https://github.com/lingmafuture","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Transformer 架构详解（含 PyTorch 代码）","uid":"48a8ab6165265f9c75721ce750feca94","slug":"transformer","date":"2025-08-12T16:00:00.000Z","updated":"2025-08-19T13:24:30.039Z","comments":true,"path":"api/articles/transformer.json","keywords":"blog, technology, programming","cover":"images/6.png","text":"读者对象：已具备基本深度学习与 PyTorch 基础，希望系统掌握 Transformer 各模块设计与实现的工程师/学生。 文章目标：从实现角度深入讲清楚每个...","permalink":"/post/transformer","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"人工智能","slug":"人工智能","count":2,"path":"api/categories/人工智能.json"}],"tags":[{"name":"transformer","slug":"transformer","count":1,"path":"api/tags/transformer.json"}],"author":{"name":"Rockway","slug":"blog-author","avatar":"https://lingmafuture.github.io/images/3.jpg","link":"https://lingmafuture.github.io","description":"Think like an artist, code like an artisan! 像艺术家一样思考，像工匠一样编程！","socials":{"github":"https://github.com/lingmafuture","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}